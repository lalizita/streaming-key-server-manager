services:
  nginx_server:
    build:
        dockerfile: ./Dockerfile.playback
        context: .
    # image: tiangolo/nginx-rtmp:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - streams-volume:/tmp/hls
    ports:
      - "1935:1935"
      - "8001:8001"
    depends_on:
      - auth_server
  auth_server:
    build:
      dockerfile: ./Dockerfile.auth
      context: .
    volumes:
      - streams-volume:/tmp/hls
    ports:
      - "8000:8000"
    hostname: auth_server
    environment:
      POSTGRES_PASSWORD: password!
      POSTGRES_USER: postgres
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: streamkeys
    depends_on:
      postgres:
      # wait for postgres
        condition: service_healthy
  # playback_server:
  #   build:
  #     dockerfile: ./Dockerfile.playback
  #     context: .
  #   volumes:
  #     - streams-volume:/tmp/hls
  #   ports:
  #     - "8001:8001"
  #   depends_on:
  #     - auth_server
  #     - nginx_server

  postgres:
    image: postgres
    restart: always
    hostname: postgres
    volumes:
      - ./scripts/1_init.sql:/docker-entrypoint-initdb.d/1_init.sql
      - ./scripts/2_stream_keys_populate.sql:/docker-entrypoint-initdb.d/2_stream_keys_populate.sql
    environment:
      POSTGRES_PASSWORD: "password!"
      POSTGRES_DB: "streamkeys"
    ports:
      - "5432:5432"

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 2s
      retries: 30
volumes:
  streams-volume:

networks:
  default:
    name: streaming-server